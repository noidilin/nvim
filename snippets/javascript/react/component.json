{
  "react_functional_component": {
    "prefix": "rfc",
    "body": [
      "export default function ${1:Component}({ ${2} }) {",
      "\treturn (",
      "\t\t<div>{${2}}</div>",
      "\t)${0}",
      "}",
      ""
    ],
    "description": "React component with props interface"
  },
  "typed_react_functional_component": {
    "prefix": "trfc",
    "body": [
      "interface ${1:Component}Props {",
      "\t${2:prop}: ${3:type};",
      "\t${0}",
      "}",
      "",
      "export default function ${1}({ ${2} }: ${1}Props) {",
      "\treturn <div>{${2}}</div>;",
      "}",
      ""
    ],
    "description": "TypeScript React component with props interface"
  },
  "react_functional_component_export": {
    "prefix": "rfce",
    "body": [
      "function ${1:Component}({ ${2} }) {",
      "\treturn (",
      "\t\t<div>{${2}}</div>",
      "\t)${0}",
      "}",
      "",
      "export default ${1}"
    ],
    "description": "React component with props interface"
  },
  "typed_react_functional_component_export": {
    "prefix": "trfce",
    "body": [
      "interface ${1:Component}Props {",
      "\t${2:prop}: ${3:type};",
      "\t${0}",
      "}",
      "",
      "function ${1}({ ${2} }: ${1}Props) {",
      "\treturn <div>{${2}}</div>;",
      "}",
      "",
      "export default ${1}"
    ],
    "description": "TypeScript React component with props interface"
  },
  "typed_react_generic_component": {
    "prefix": "trgc",
    "body": [
      "interface ${1:Component}Props<T> {",
      "\titems: T[];",
      "\trenderItem: (item: T) => React.ReactNode;",
      "}",
      "",
      "export function ${1}<T>({ items, renderItem }: ${1}Props<T>) {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t{items.map((item, index) => (",
      "\t\t\t\t<div key={index}>{renderItem(item)}</div>",
      "\t\t\t))}",
      "\t\t</>",
      "\t);",
      "}"
    ],
    "description": "TypeScript generic React component"
  },
  "forward_ref_component": {
    "prefix": "frc",
    "body": [
      "import { forwardRef } from 'react';",
      "",
      "const ${1:Component} = forwardRef((props, ref) => {",
      "\treturn (",
      "\t\t<div ref={ref}>",
      "\t\t\t${0}",
      "\t\t</div>",
      "\t);",
      "});",
      "",
      "${1}.displayName = '${1}';",
      "",
      "export default ${1};"
    ],
    "description": "React forwardRef component"
  },
  "typed_forward_ref_component": {
    "prefix": "tfrc",
    "body": [
      "import { forwardRef } from 'react';",
      "",
      "interface ${1:Component}Props {",
      "\t${0}",
      "}",
      "",
      "const ${1} = forwardRef<${2:HTMLDivElement}, ${1}Props>((props, ref) => {",
      "\treturn <div ref={ref}>{props.children}</div>;",
      "});",
      "",
      "${1}.displayName = '${1}';"
    ],
    "description": "TypeScript forwardRef component with types"
  },
  "react_memo_component": {
    "prefix": "rmc",
    "body": [
      "import { memo } from 'react';",
      "",
      "const ${1:Component} = memo(function ${1}({ ${2} }) {",
      "\treturn <div>{${2}}</div>;",
      "});",
      "",
      "${1}.displayName = '${1}';",
      "",
      "export default ${1};"
    ],
    "description": "React memo component"
  },
  "typed_react_memo_component": {
    "prefix": "trmc",
    "body": [
      "import { memo } from 'react';",
      "",
      "interface ${1:Component}Props {",
      "\t${2:prop}: ${3:type};",
      "}",
      "",
      "const ${1} = memo<${1}Props>(function ${1}({ ${2} }) {",
      "\treturn <div>{${2}}</div>;",
      "});",
      "",
      "${1}.displayName = '${1}';",
      "",
      "export default ${1};"
    ],
    "description": "TypeScript React memo component"
  },
  "react_server_component": {
    "prefix": "rsc",
    "body": [
      "export default async function ${1:Component}({ ${2} }) {",
      "\tconst ${3:data} = await ${4:fetchData}();",
      "\t",
      "\treturn <div>{${3}}</div>;",
      "}"
    ],
    "description": "React Server Component (async)"
  },
  "typed_react_server_component": {
    "prefix": "trsc",
    "body": [
      "interface ${1:Component}Props {",
      "\t${2:prop}: ${3:type};",
      "}",
      "",
      "export default async function ${1}({ ${2} }: ${1}Props) {",
      "\tconst ${4:data} = await ${5:fetchData}();",
      "\t",
      "\treturn <div>{${4}}</div>;",
      "}"
    ],
    "description": "TypeScript React Server Component (async)"
  }
}
